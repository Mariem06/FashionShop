name: Sample Run Include Syntax Json Format
on: push
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
       matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
     - uses: actions/checkout@v3
     - name: Retrieve the commit message 
       id: get_commit_message
       run: echo "::set-output name=commit_message::$(git log --format=%B -n 1 ${{ github.sha }})" 
     - name: Extract Jira Ticket name
       id: extract
       run: |
        input_string="${{ steps.get_commit_message.outputs.commit_message }}"
        ticket_jira=$(echo $input_string | sed -n 's/.*\[\([^]]*\)\].*/\1/p')
        echo "::set-output name=ticket_jira::$ticket_jira"
        jobs_names=$(echo $input_string | sed -n 's/\[[^]]*\]\s*\(.*\)/\1/p')
        echo "::set-output name=jobs_names::$jobs_names"
     - name: Set Dynamic Matrix containing job names
       id: setmatrix
       env: 
        message: "${{ steps.extract.outputs.jobs_names }}"
       run: |
           matrixStringifiedObject="{\"include\":["
           IFS=',' read -ra words <<< "$message"
            for word in "${words[@]}"; do
              matrixStringifiedObject+="{\"word\":\"$word\"},"
            done
                 matrixStringifiedObject+="]}"
           echo "::set-output name=matrix::$matrixStringifiedObject"
       shell: bash
     - name: Check Jira
       run: echo "${{ steps.extract.outputs.ticket_jira }}"

           
         
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.job1.outputs.matrix) }}
    steps:
    - run: echo Run ${{ matrix.word }}
